
path to plain text header files:
/usr/include/

Important Headers:
- stdio.h    - provides input and output functions
- stdlib.h   - provides ?????
- limits.h   - defines the max size of different types
- float.h    - functions for float
- string.h   - functions for strings (strcmp)
- ctype.h    - functions for tests and conversions of Types and Characters

Format Specifiers:
-  %b		- binary
-  %c           - char
-  %d           - signed integer
-  %e or %E     - float - Scientific Notation
-  %f           - float 
-  %g or %G     - float with current precision
-  %i           - unsigned integer
-  %ld or %li   - long
-  %lf          - double
-  %Lf          - long double
-  %lu          - unsigned int or unsigned long
-  %lli or %lld - long long
-  %llu         - unsigned long long
-  %o           - Octal representation
-  %p           - pointer
-  %s           - string
-  %u           - unsigned int
-  %x or %X     - Hexadecimal representation
-  %n           - Prints nothing
-  %%           - Prints % character


Special characters:
- \b		- Backspace
- \n		- New Line
- \f		- Form Feed
- \t		- Horizontal Tab
- \r		- Carriage Return
- \'		- Single Quote
- \"		- Double Quote
- \v		- Vertical Tab
- \\		- Backslash
- \?		- Question Mark

Functions in Headers:

string.h:

strcmp(str1, str2):
	returns 0 if strings match, it returned int > 0 if no match.

getchar()

getchar() will accept input until a '\n' is input because it will
store the input in buffer until a '\n' is input

After the '\n' is input, the program will pull a single char from
the buffer, one at a time, so it still prints the loop correctly.

This can be seen by running the program below, Example of getchar() buffer:

/home/david/Projects/CProgrammingLanguage/src/codeExamples/inputOutputExamples/getCharBufferExample.c
