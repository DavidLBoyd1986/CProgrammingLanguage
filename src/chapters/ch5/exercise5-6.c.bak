#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int get_line(char *, int);
int tatoi(char *);
char* titoa(int);
char* reverse(char *);
int strindex(char *, char *);
int getop(char *);
int expo(int, int);

/* getline: get line into s, return length */
/* atoi: convert s to integer */
/* itoa: convert n to characters in s */
/* reverse: reverse string s in place */
/* strindex: return index of t in s, -1 if none */
/* getop: get next operator or numeric operand */

int main()
{
	// Test getline()
	char blank_string[100];
	int input_length;
	input_length = get_line(blank_string, 100);
	printf("\nblank_string after getting input: %s\n", blank_string);
	printf("blank_string length: %i\n", input_length);
	// Test atoi()
	char *atoi_test_1 = "394";
	printf("atoi_test_1 = %s\n", atoi_test_1);
	int atoi_result_1 = tatoi(atoi_test_1);
	printf("atoi_result_1 = %i\n", atoi_result_1);
	char *atoi_test_2 = "-438923";
	printf("atoi_test_2 = %s\n", atoi_test_2);
	int atoi_result_2 = tatoi(atoi_test_2);
	printf("atoi_result_2 = %i\n", atoi_result_2);
	int itoa_test_1 = 394;
	printf("itoa_test_1 = %i\n", itoa_test_1);
	char *itoa_result_1 = titoa(itoa_test_1);
	printf("itoa_result_1 = %s\n", itoa_result_1);
}

int get_line(char *s, int limit)
{
	int c;
	int len = 0;
	char *s_start;

	while ((c = getchar()) != '\n' || c != EOF || c != '\0') {
		*s++ = c;
		len++;
		if (c == '`')
			break;
	}
	return len;
}

int expo(int base, int exp)
{
	int total = base;

	while (exp > 0) {
		total = total * base;
		exp--;
	}
	return total;
}

int tatoi(char *s)
{
	int c;
	int len = 0;
	int sign = 0;
	int final_val = 0;

	// Save sign
	if ((c = *s)  == '-') {
		sign = '-';
		s++;
	}
	char *temp_s = s; //Copy the string pointer before getting length
	// Get length of s
	while ((c = *s) != '\0') {
		s++;
		len++;
	}
	len = len - 2;
	// Turn string into an int in final val
	while (len >= 0) {
		c = *temp_s++;
		final_val = final_val + ((c - 48) * expo(10, len));
		len--;
	}
	c = *temp_s;
	final_val = final_val + (c - 48);
	// Add sign back in
	if (sign == '-')
		final_val *= -1;

	return final_val;
}

char* titoa(int n)
{
	char return_string[20];
	char *s = return_string;
	int p;
	char c;
	int len = 0;

	while ((p = n % 10) > 0) {
		c = p + 48;
		*s++ = c;
		len++;
		n /= 10;
		//printf("n = %i\n", n);
		//printf("c = %c\n", c);
		//printf("*s = %c\n", *s);
	}
	*s = '\0';
	printf("return_string = %s\n", return_string);
	char *final_s;
	char swap;
	for (int f = 0, b = len; f < b-1; f++, b--) {
		swap = *(return_string + f);
		printf("swap = %c\n", swap);
		*(return_string + f) = *(return_string + b);
		*(return_string + b) = swap;
		//*final_s++ = *--s;
	}
	*(return_string + len) = '\0';
	printf("return_string = %s\n", return_string);
	//printf("final_s = %s\n", final_s);
	return return_string;
}
